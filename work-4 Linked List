from __future__ import annotations

class Node:
    def __init__(self,data,next=None):

        self.data = data

        self.next = next

    def __repr__(self):

        return '{}==>{}'.format(self.data,self.next.data if self.next else None)
        
class LinkedList:

    def __init__(self):

        self.head = None

        self.tail = None

    def add(self,data):

        node = Node(data)
        
        tail = self.tail 
        
        if tail is None:

            self.head = node

        else:

            tail.next = node

        self.tail = node

        return self
        
    def iternodes(self):

        current = self.head

        while current:

            yield current

            current = current.next
            
aeiou = LinkedList()

aeiou.add('zxc').add(10).add(asd).add('5')

for i in aeiou.iternodes():

    print(i)
